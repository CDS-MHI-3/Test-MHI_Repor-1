name: Trigger Policy Scan

on:
  schedule:
    - cron: '30 4 * * 1' # Every Monday at 4:30 AM UTC (10 AM IST)
  workflow_dispatch: # Allows manual triggering from the GitHub UI

jobs:
  test:
    name: Run Trigger Policy Test Cases
    runs-on: ubuntu-latest

    steps:
      # Step 1: Checkout the repository code
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          ref: main # Explicitly checkout the develop branch

      # Step 2: Setup Python
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'

      # Step 3: Cache dependencies
      - name: Cache dependencies
        uses: actions/cache@v4
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-

      # Step 4: Install dependencies
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install pytest==8.4.1
          pip install dotenv==0.9.9
          pip install pytest-check==2.5.3
          pip install requests==2.32.4

      # Step 5: Run pytest
      - name: Run pytest
        env:
            INT_SMOKE_PW: ${{ secrets.INT_SMOKE_PW }}
            INT_SMOKE_PIPELINE_PW: ${{ secrets.INT_SMOKE_PIPELINE_PW }}
            INT_CORE_PW: ${{ secrets.INT_CORE_PW }}
            INT_SLACK_PW: ${{ secrets.INT_SLACK_PW }}
            INT_MSFTDEV_PW: ${{ secrets.INT_MSFTDEV_PW }}
            OMNI_ENV: ${{ secrets.OMNI_ENV }}
        run: pytest tests/app_factory/policies/security_posture_policies -k test_trigger_policy_scan -vs
